# GitHub Configuration YAML
displayName: "GitHub"
icon: "PHN2ZyB3aWR0aD0iMTAyNCIgaGVpZ2h0PSIxMDI0IiB2aWV3Qm94PSIwIDAgMTAyNCAxMDI0IiBmaWxsPSJub25lIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgo8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGNsaXAtcnVsZT0iZXZlbm9kZCIgZD0iTTggMEMzLjU4IDAgMCAzLjU4IDAgOEMwIDExLjU0IDIuMjkgMTQuNTMgNS40NyAxNS41OUM1Ljg3IDE1LjY2IDYuMDIgMTUuNDIgNi4wMiAxNS4yMUM2LjAyIDE1LjAyIDYuMDEgMTQuMzkgNi4wMSAxMy43MkM0IDE0LjA5IDMuNDggMTMuMjMgMy4zMiAxMi43OEMzLjIzIDEyLjU1IDIuODQgMTEuODQgMi41IDExLjY1QzIuMjIgMTEuNSAxLjgyIDExLjEzIDIuNDkgMTEuMTJDMy4xMiAxMS4xMSAzLjU3IDExLjcgMy43MiAxMS45NEM0LjQ0IDEzLjE1IDUuNTkgMTIuODEgNi4wNSAxMi42QzYuMTIgMTIuMDggNi4zMyAxMS43MyA2LjU2IDExLjUzQzQuNzggMTEuMzMgMi45MiAxMC42NCAyLjkyIDcuNThDMi45MiA2LjcxIDMuMjMgNS45OSAzLjc0IDUuNDNDMy42NiA1LjIzIDMuMzggNC40MSAzLjgyIDMuMzFDMy44MiAzLjMxIDQuNDkgMy4xIDYuMDIgNC4xM0M2LjY2IDMuOTUgNy4zNCAzLjg2IDguMDIgMy44NkM4LjcgMy44NiA5LjM4IDMuOTUgMTAuMDIgNC4xM0MxMS41NSAzLjA5IDEyLjIyIDMuMzEgMTIuMjIgMy4zMUMxMi42NiA0LjQxIDEyLjM4IDUuMjMgMTIuMyA1LjQzQzEyLjgxIDUuOTkgMTMuMTIgNi43IDEzLjEyIDcuNThDMTMuMTIgMTAuNjUgMTEuMjUgMTEuMzMgOS40NyAxMS41M0M5Ljc2IDExLjc4IDEwLjAxIDEyLjI2IDEwLjAxIDEzLjAxQzEwLjAxIDE0LjA4IDEwIDE0Ljk0IDEwIDE1LjIxQzEwIDE1LjQyIDEwLjE1IDE1LjY3IDEwLjU1IDE1LjU5QzEzLjcxIDE0LjUzIDE2IDExLjUzIDE2IDhDMTYgMy41OCAxMi40MiAwIDggMFoiIHRyYW5zZm9ybT0ic2NhbGUoNjQpIiBmaWxsPSIjMUIxRjIzIi8+Cjwvc3ZnPgo="
description: "GitHub as a System of Record"
# Enterprise Cloud: https://api.github.com/graphql 
# Enterprise Server: {hostname}/api/graphql
address: "https://github-enterprise-server.sgnldemos.com/api/graphql"
defaultSyncFrequency: HOURLY
defaultSyncMinInterval: 1
defaultApiCallFrequency: SECONDLY
defaultApiCallMinInterval: 1
type: "GitHub-1.0.0"
adapterConfig: "ewogICAgImVudGVycHJpc2VTbHVnIjogIlNHTkwiCn0=" # { enterpriseSlug: "SGNL" }
auth:
  - bearer: # https://docs.github.com/en/enterprise-server@3.10/authentication/keeping-your-account-and-data-secure/about-authentication-to-github
      authToken: "Bearer {{input token}}"
entities:
  # https://docs.github.com/en/graphql/reference/objects#organization
  Organization:
    displayName: Organization
    externalId: Organization
    description: Organization entity in GitHub.
    syncFrequency: HOURLY
    syncMinInterval: 1
    apiCallFrequency: SECONDLY
    apiCallMinInterval: 1
    pageSize: 100
    pagesOrderedById: false
    attributes:
      - name: id
        externalId: id
        type: String
        indexed: true
        uniqueId: true
      # Note: This attribute has been added in post-processing and is not part of the Organization entity.
      - name: enterpriseId
        externalId: enterpriseId
        type: String
      - name: announcement
        externalId: announcement
        type: String
      - name: announcementExpiresAt
        externalId: announcementExpiresAt
        type: DateTime
      - name: announcementUserDismissible
        externalId: announcementUserDismissible
        type: Bool
      - name: anyPinnableItems
        externalId: anyPinnableItems
        type: Bool
      - name: archivedAt
        externalId: archivedAt
        type: DateTime
      - name: avatarUrl
        externalId: avatarUrl
        type: String
      - name: createdAt
        externalId: createdAt
        type: DateTime
      - name: databaseId
        externalId: databaseId
        type: Int64
      - name: description
        externalId: description
        type: String
      - name: descriptionHTML
        externalId: descriptionHTML
        type: String
      - name: email
        externalId: email
        type: String
      - name: login
        externalId: login
        type: String
      - name: ipAllowListEnabledSetting
        externalId: ipAllowListEnabledSetting
        type: String
      - name: isVerified
        externalId: isVerified
        type: Bool
      - name: location
        externalId: location
        type: String
      - name: name
        externalId: name
        type: String
      - name: newTeamResourcePath
        externalId: newTeamResourcePath
        type: String
      - name: newTeamUrl
        externalId: newTeamUrl
        type: String
      - name: organizationBillingEmail
        externalId: organizationBillingEmail
        type: String 
      - name: pinnedItemsRemaining
        externalId: pinnedItemsRemaining
        type: Int64
      - name: projectsResourcePath
        externalId: projectsResourcePath
        type: String
      - name: projectsUrl
        externalId: projectsUrl
        type: String
      - name: requiresTwoFactorAuthentication
        externalId: requiresTwoFactorAuthentication
        type: Bool
      - name: resourcePath
        externalId: resourcePath
        type: String
      - name: teamsResourcePath
        externalId: teamsResourcePath
        type: String
      - name: teamsUrl
        externalId: teamsUrl
        type: String
      - name: twitterUsername
        externalId: twitterUsername
        type: String
      - name: updatedAt
        externalId: updatedAt
        type: DateTime
      - name: url
        externalId: url
        type: String
      - name: viewerCanAdminister
        externalId: viewerCanAdminister
        type: Bool
      - name: viewerCanChangePinnedItems
        externalId: viewerCanChangePinnedItems
        type: Bool
      - name: viewerCanCreateProjects
        externalId: viewerCanCreateProjects
        type: Bool
      - name: viewerCanCreateRepositories
        externalId: viewerCanCreateRepositories
        type: Bool
      - name: viewerCanCreateTeams
        externalId: viewerCanCreateTeams
        type: Bool
      - name: viewerIsAMember
        externalId: viewerIsAMember
        type: Bool
      - name: websiteUrl
        externalId: websiteUrl
        type: String
  # https://docs.github.com/en/graphql/reference/objects#user
  User:
    displayName: User
    externalId: User
    description: User entity in GitHub.
    syncFrequency: HOURLY
    syncMinInterval: 1
    apiCallFrequency: SECONDLY
    apiCallMinInterval: 1
    pageSize: 100
    pagesOrderedById: false
    attributes:
      - name: id
        externalId: $.node.id
        type: String
        indexed: true
        uniqueId: true
      # Note: This attribute has been added in post-processing and is not part of the User entity.
      - name: orgId
        externalId: orgId
        type: String
        indexed: true
      # Note: User.role represents the role of a user in the organization with id 'orgId'.
      - name: role
        externalId: role
        type: String
      - name: avatarUrl
        externalId: $.node.avatarUrl
        type: String
      - name: bio
        externalId: $.node.bio
        type: String
      - name: bioHTML
        externalId: $.node.bioHTML
        type: String
      - name: company
        externalId: $.node.company
        type: String
      - name: companyHTML
        externalId: $.node.companyHTML
        type: String
      - name: createdAt
        externalId: $.node.createdAt
        type: DateTime
      - name: databaseId
        externalId: $.node.databaseId
        type: Int64
      - name: email
        externalId: $.node.email
        type: String
      - name: login
        externalId: $.node.login
        type: String
      - name: isBountyHunter
        externalId: $.node.isBountyHunter
        type: Bool
      - name: isCampusExpert
        externalId: $.node.isCampusExpert
        type: Bool
      - name: isDeveloperProgramMember
        externalId: $.node.isDeveloperProgramMember
        type: Bool
      - name: isEmployee
        externalId: $.node.isEmployee
        type: Bool
      - name: isFollowingViewer
        externalId: $.node.isFollowingViewer
        type: Bool
      - name: isHireable
        externalId: $.node.isHireable
        type: Bool
      - name: isSiteAdmin
        externalId: $.node.isSiteAdmin
        type: Bool
      - name: isViewer
        externalId: $.node.isViewer
        type: Bool
      - name: location
        externalId: $.node.location
        type: String
      - name: name
        externalId: $.node.name
        type: String
      - name: pinnedItemsRemaining
        externalId: $.node.pinnedItemsRemaining
        type: Int64
      - name: projectsResourcePath
        externalId: $.node.projectsResourcePath
        type: String
      - name: projectsUrl
        externalId: $.node.projectsUrl
        type: String
      - name: resourcePath
        externalId: $.node.resourcePath
        type: String
      - name: twitterUsername
        externalId: $.node.twitterUsername
        type: String
      - name: updatedAt
        externalId: $.node.updatedAt
        type: DateTime
      - name: url
        externalId: $.node.url
        type: String
      - name: viewerCanChangePinnedItems
        externalId: $.node.viewerCanChangePinnedItems
        type: Bool
      - name: viewerCanCreateProjects
        externalId: $.node.viewerCanCreateProjects
        type: Bool
      - name: viewerCanFollow
        externalId: $.node.viewerCanFollow
        type: Bool
      - name: viewerIsFollowing
        externalId: $.node.viewerIsFollowing
        type: Bool
      - name: websiteUrl
        externalId: $.node.websiteUrl
        type: String
  UserOVDE:
    parent: User
    displayName: UserOVDE
    externalId: $.node.organizationVerifiedDomainEmails
    description: Entity representing a GitHub user's organization verified domain emails.
    syncFrequency: HOURLY
    syncMinInterval: 1
    apiCallFrequency: SECONDLY
    apiCallMinInterval: 1
    pageSize: 100
    pagesOrderedById: false
    attributes:
      - name: email
        externalId: email
        type: String
        indexed: true
        uniqueId: true 
  # https://docs.github.com/en/graphql/reference/objects#team  
  Team:
    displayName: Team
    externalId: Team
    description: Team entity in GitHub.
    syncFrequency: HOURLY
    syncMinInterval: 1
    apiCallFrequency: SECONDLY
    apiCallMinInterval: 1
    pageSize: 100
    pagesOrderedById: false
    attributes:
      - name: id
        externalId: id
        type: String
        indexed: true
        uniqueId: true
      # Note: This attribute has been added in post-processing and is not part of the Team entity.
      - name: enterpriseId
        externalId: enterpriseId
        type: String
      # Note: This attribute has been added in post-processing and is not part of the Team entity.
      - name: orgId
        externalId: orgId
        type: String
        indexed: true
      - name: avatarUrl
        externalId: avatarUrl
        type: String
      - name: combinedSlug
        externalId: combinedSlug
        type: String
      - name: createdAt
        externalId: createdAt
        type: DateTime
      - name: databaseId
        externalId: databaseId
        type: Int64
      - name: description
        externalId: description
        type: String
      - name: discussionsResourcePath
        externalId: discussionsResourcePath
        type: String
      - name: discussionsUrl
        externalId: discussionsUrl
        type: String
      - name: editTeamResourcePath
        externalId: editTeamResourcePath
        type: String
      - name: editTeamUrl
        externalId: editTeamUrl
        type: String
      - name: membersResourcePath
        externalId: membersResourcePath
        type: String
      - name: membersUrl
        externalId: membersUrl
        type: String
      - name: name
        externalId: name
        type: String
      - name: newTeamResourcePath
        externalId: newTeamResourcePath
        type: String
      - name: newTeamUrl
        externalId: newTeamUrl
        type: String
      - name: repositoriesResourcePath
        externalId: repositoriesResourcePath
        type: String
      - name: repositoriesUrl
        externalId: repositoriesUrl
        type: String
      - name: resourcePath
        externalId: resourcePath
        type: String
      - name: slug
        externalId: slug
        type: String
      - name: teamsResourcePath
        externalId: teamsResourcePath
        type: String
      - name: teamsUrl
        externalId: teamsUrl
        type: String
      - name: updatedAt
        externalId: updatedAt
        type: DateTime
      - name: url
        externalId: url
        type: String
      - name: viewerCanAdminister 
        externalId: viewerCanAdminister
        type: Bool
      - name: viewerCanSubscribe
        externalId: viewerCanSubscribe
        type: Bool
  # Fetched from the 'members' attribute belonging to the Teams entity.
  # TeamMember entity is for creating relationships between Users and Teams and does not support organizationVerifiedDomainEmails.
  # To retrieve organizationVerifiedDomainEmails, declare it as an attribute for the User entity.
  # TeamMember is a User entity type: https://docs.github.com/en/graphql/reference/objects#user
  TeamMember:
    parent: Team
    displayName: TeamMember
    externalId: $.members.edges
    description: Entity representing a GitHub team each user belongs to.
    syncFrequency: HOURLY
    syncMinInterval: 1
    apiCallFrequency: SECONDLY
    apiCallMinInterval: 1
    pageSize: 100
    pagesOrderedById: false
    attributes:
      - name: id
        externalId: $.node.id
        type: String
        indexed: true
        uniqueId: true
      # Note: Role represents the TeamMember's role on the team.
      # https://docs.github.com/en/graphql/reference/enums#teammemberrole
      - name: role
        externalId: role
        type: String
      - name: avatarUrl
        externalId: $.node.avatarUrl
        type: String
      - name: bio
        externalId: $.node.bio
        type: String
      - name: bioHTML
        externalId: $.node.bioHTML
        type: String
      - name: company
        externalId: $.node.company
        type: String
      - name: companyHTML
        externalId: $.node.companyHTML
        type: String
      - name: createdAt
        externalId: $.node.createdAt
        type: DateTime
      - name: databaseId
        externalId: $.node.databaseId
        type: Int64
      - name: email
        externalId: $.node.email
        type: String
      - name: login
        externalId: $.node.login
        type: String
      - name: isBountyHunter
        externalId: $.node.isBountyHunter
        type: Bool
      - name: isCampusExpert
        externalId: $.node.isCampusExpert
        type: Bool
      - name: isDeveloperProgramMember
        externalId: $.node.isDeveloperProgramMember
        type: Bool
      - name: isEmployee
        externalId: $.node.isEmployee
        type: Bool
      - name: isFollowingViewer
        externalId: $.node.isFollowingViewer
        type: Bool
      - name: isHireable
        externalId: $.node.isHireable
        type: Bool
      - name: isSiteAdmin
        externalId: $.node.isSiteAdmin
        type: Bool
      - name: isViewer
        externalId: $.node.isViewer
        type: Bool
      - name: location
        externalId: $.node.location
        type: String
      - name: name
        externalId: $.node.name
        type: String
      - name: pinnedItemsRemaining
        externalId: $.node.pinnedItemsRemaining
        type: Int64
      - name: projectsResourcePath
        externalId: $.node.projectsResourcePath
        type: String
      - name: projectsUrl
        externalId: $.node.projectsUrl
        type: String
      - name: resourcePath
        externalId: $.node.resourcePath
        type: String
      - name: twitterUsername
        externalId: $.node.twitterUsername
        type: String
      - name: updatedAt
        externalId: $.node.updatedAt
        type: DateTime
      - name: url
        externalId: $.node.url
        type: String
      - name: viewerCanChangePinnedItems
        externalId: $.node.viewerCanChangePinnedItems
        type: Bool
      - name: viewerCanCreateProjects
        externalId: $.node.viewerCanCreateProjects
        type: Bool
      - name: viewerCanFollow
        externalId: $.node.viewerCanFollow
        type: Bool
      - name: viewerIsFollowing
        externalId: $.node.viewerIsFollowing
        type: Bool
      - name: websiteUrl
        externalId: $.node.websiteUrl
        type: String
  # Fetched from the 'repositories' attribute belonging to the Teams entity.
  # TeamRepository is a Repository entity type: https://docs.github.com/en/graphql/reference/objects#repository
  TeamRepository:
    parent: Team
    displayName: TeamRepository
    externalId: $.repositories.edges
    description: Entity representing a GitHub repository assigned to a team.
    syncFrequency: HOURLY
    syncMinInterval: 1
    apiCallFrequency: SECONDLY
    apiCallMinInterval: 1
    pageSize: 100
    pagesOrderedById: false
    attributes:
      - name: id
        externalId: $.node.id
        type: String
        indexed: true
        uniqueId: true
        # Permission is the Team's permission level for this repository
        # https://docs.github.com/en/graphql/reference/enums#repositorypermission
      - name: permission 
        externalId: permission
        type: String
      - name: allowUpdateBranch
        externalId: $.node.allowUpdateBranch
        type: Bool
      - name: archivedAt
        externalId: $.node.archivedAt
        type: DateTime
      - name: autoMergeAllowed
        externalId: $.node.autoMergeAllowed
        type: Bool
      - name: createdAt
        externalId: $.node.createdAt
        type: DateTime
      - name: databaseId
        externalId: $.node.databaseId
        type: Int64
      - name: deleteBranchOnMerge
        externalId: $.node.deleteBranchOnMerge
        type: Bool
      - name: description
        externalId: $.node.description
        type: String
      - name: descriptionHTML
        externalId: $.node.descriptionHTML
        type: String
      - name: diskUsage
        externalId: $.node.diskUsage
        type: Int64
      - name: forkCount
        externalId: $.node.forkCount
        type: Int64
      - name: forkingAllowed
        externalId: $.node.forkingAllowed
        type: Bool
      - name: hasDiscussionsEnabled
        externalId: $.node.hasDiscussionsEnabled
        type: Bool
      - name: hasIssuesEnabled
        externalId: $.node.hasIssuesEnabled
        type: Bool
      - name: hasProjectsEnabled
        externalId: $.node.hasProjectsEnabled
        type: Bool
      - name: hasVulnerabilityAlertsEnabled
        externalId: $.node.hasVulnerabilityAlertsEnabled
        type: Bool
      - name: hasWikiEnabled
        externalId: $.node.hasWikiEnabled
        type: Bool
      - name: homepageUrl
        externalId: $.node.homepageUrl
        type: String
      - name: isArchived
        externalId: $.node.isArchived
        type: Bool
      - name: isBlankIssuesEnabled
        externalId: $.node.isBlankIssuesEnabled
        type: Bool
      - name: isDisabled
        externalId: $.node.isDisabled
        type: Bool
      - name: isEmpty
        externalId: $.node.isEmpty
        type: Bool
      - name: isInOrganization
        externalId: $.node.isInOrganization
        type: Bool
      - name: isFork
        externalId: $.node.isFork
        type: Bool
      - name: isLocked
        externalId: $.node.isLocked
        type: Bool
      - name: isMirror
        externalId: $.node.isMirror
        type: Bool
      - name: isPrivate
        externalId: $.node.isPrivate
        type: Bool
      - name: isSecurityPolicyEnabled
        externalId: $.node.isSecurityPolicyEnabled
        type: Bool
      - name: isTemplate
        externalId: $.node.isTemplate
        type: Bool
      - name: isUserConfigurationRepository
        externalId: $.node.isUserConfigurationRepository
        type: Bool
      - name: mergeCommitAllowed
        externalId: $.node.mergeCommitAllowed
        type: Bool
      - name: mirrorUrl
        externalId: $.node.mirrorUrl
        type: String
      - name: name
        externalId: $.node.name
        type: String
      - name: nameWithOwner
        externalId: $.node.nameWithOwner
        type: String
      - name: openGraphImageUrl
        externalId: $.node.openGraphImageUrl
        type: String
      - name: projectsResourcePath
        externalId: $.node.projectsResourcePath
        type: String
      - name: projectsUrl
        externalId: $.node.projectsUrl
        type: String
      - name: pushedAt
        externalId: $.node.pushedAt
        type: DateTime
      - name: rebaseMergeAllowed
        externalId: $.node.rebaseMergeAllowed
        type: Bool
      - name: resourcePath
        externalId: $.node.resourcePath
        type: String
      - name: securityPolicyUrl
        externalId: $.node.securityPolicyUrl
        type: String
      - name: shortDescriptionHTML
        externalId: $.node.shortDescriptionHTML
        type: String
      - name: squashMergeAllowed
        externalId: $.node.squashMergeAllowed
        type: Bool
      - name: stargazerCount
        externalId: $.node.stargazerCount
        type: Int64
      - name: tempCloneToken
        externalId: $.node.tempCloneToken
        type: String
      - name: updatedAt
        externalId: $.node.updatedAt
        type: DateTime
      - name: url
        externalId: $.node.url
        type: String
      - name: usesCustomOpenGraphImage
        externalId: $.node.usesCustomOpenGraphImage
        type: Bool
      - name: viewerCanAdminister
        externalId: $.node.viewerCanAdminister
        type: Bool
      - name: viewerCanCreateProjects
        externalId: $.node.viewerCanCreateProjects
        type: Bool
      - name: viewerCanSubscribe
        externalId: $.node.viewerCanSubscribe
        type: Bool
      - name: viewerCanUpdateTopics
        externalId: $.node.viewerCanUpdateTopics
        type: Bool
      - name: viewerDefaultCommitEmail
        externalId: $.node.viewerDefaultCommitEmail
        type: String
      - name: viewerHasStarred
        externalId: $.node.viewerHasStarred
        type: Bool
      - name: viewerPossibleCommitEmails
        externalId: $.node.viewerPossibleCommitEmails
        type: String
      - name: webCommitSignoffRequired
        externalId: $.node.webCommitSignoffRequired
        type: Bool
  # https://docs.github.com/en/graphql/reference/objects#repository
  Repository:
    displayName: Repository
    externalId: Repository
    description: Repository entity in GitHub
    syncFrequency: HOURLY
    syncMinInterval: 1
    apiCallFrequency: SECONDLY
    apiCallMinInterval: 1
    pageSize: 100
    pagesOrderedById: false
    attributes:
      - name: id
        externalId: id
        type: String
        indexed: true
        uniqueId: true
      # Note: This attribute has been added in post-processing and is not part of the Team entity.
      - name: enterpriseId
        externalId: enterpriseId
        type: String
      # Note: This attribute has been added in post-processing and is not part of the Team entity.
      - name: orgId
        externalId: orgId
        type: String
        indexed: true
      - name: allowUpdateBranch
        externalId: allowUpdateBranch
        type: Bool
      - name: archivedAt
        externalId: archivedAt
        type: DateTime
      - name: autoMergeAllowed
        externalId: autoMergeAllowed
        type: Bool
      - name: createdAt
        externalId: createdAt
        type: DateTime
      - name: databaseId
        externalId: databaseId
        type: Int64
      - name: deleteBranchOnMerge
        externalId: deleteBranchOnMerge
        type: Bool
      - name: description
        externalId: description
        type: String
      - name: descriptionHTML
        externalId: descriptionHTML
        type: String
      - name: diskUsage
        externalId: diskUsage
        type: Int64
      - name: forkCount
        externalId: forkCount
        type: Int64
      - name: forkingAllowed
        externalId: forkingAllowed
        type: Bool
      - name: hasDiscussionsEnabled
        externalId: hasDiscussionsEnabled
        type: Bool
      - name: hasIssuesEnabled
        externalId: hasIssuesEnabled
        type: Bool
      - name: hasProjectsEnabled
        externalId: hasProjectsEnabled
        type: Bool
      - name: hasVulnerabilityAlertsEnabled
        externalId: hasVulnerabilityAlertsEnabled
        type: Bool
      - name: hasWikiEnabled
        externalId: hasWikiEnabled
        type: Bool
      - name: homepageUrl
        externalId: homepageUrl
        type: String
      - name: isArchived
        externalId: isArchived
        type: Bool
      - name: isBlankIssuesEnabled
        externalId: isBlankIssuesEnabled
        type: Bool
      - name: isDisabled
        externalId: isDisabled
        type: Bool
      - name: isEmpty
        externalId: isEmpty
        type: Bool
      - name: isInOrganization
        externalId: isInOrganization
        type: Bool
      - name: isFork
        externalId: isFork
        type: Bool
      - name: isLocked
        externalId: isLocked
        type: Bool
      - name: isMirror
        externalId: isMirror
        type: Bool
      - name: isPrivate
        externalId: isPrivate
        type: Bool
      - name: isSecurityPolicyEnabled
        externalId: isSecurityPolicyEnabled
        type: Bool
      - name: isTemplate
        externalId: isTemplate
        type: Bool
      - name: isUserConfigurationRepository
        externalId: isUserConfigurationRepository
        type: Bool
      - name: mergeCommitAllowed
        externalId: mergeCommitAllowed
        type: Bool
      - name: mirrorUrl
        externalId: mirrorUrl
        type: String
      - name: name
        externalId: name
        type: String
      - name: nameWithOwner
        externalId: nameWithOwner
        type: String
      - name: openGraphImageUrl
        externalId: openGraphImageUrl
        type: String
      - name: projectsResourcePath
        externalId: projectsResourcePath
        type: String
      - name: projectsUrl
        externalId: projectsUrl
        type: String
      - name: pushedAt
        externalId: pushedAt
        type: DateTime
      - name: rebaseMergeAllowed
        externalId: rebaseMergeAllowed
        type: Bool
      - name: resourcePath
        externalId: resourcePath
        type: String
      - name: securityPolicyUrl
        externalId: securityPolicyUrl
        type: String
      - name: shortDescriptionHTML
        externalId: shortDescriptionHTML
        type: String
      - name: squashMergeAllowed
        externalId: squashMergeAllowed
        type: Bool
      - name: stargazerCount
        externalId: stargazerCount
        type: Int64
      - name: tempCloneToken
        externalId: tempCloneToken
        type: String
      - name: updatedAt
        externalId: updatedAt
        type: DateTime
      - name: url
        externalId: url
        type: String
      - name: usesCustomOpenGraphImage
        externalId: usesCustomOpenGraphImage
        type: Bool
      - name: viewerCanAdminister
        externalId: viewerCanAdminister
        type: Bool
      - name: viewerCanCreateProjects
        externalId: viewerCanCreateProjects
        type: Bool
      - name: viewerCanSubscribe
        externalId: viewerCanSubscribe
        type: Bool
      - name: viewerCanUpdateTopics
        externalId: viewerCanUpdateTopics
        type: Bool
      - name: viewerDefaultCommitEmail
        externalId: viewerDefaultCommitEmail
        type: String
      - name: viewerHasStarred
        externalId: viewerHasStarred
        type: Bool
      - name: viewerPossibleCommitEmails
        externalId: viewerPossibleCommitEmails
        type: String
        list: true
      - name: webCommitSignoffRequired
        externalId: webCommitSignoffRequired
        type: Bool
  # Collaborator is a User entity type: https://docs.github.com/en/graphql/reference/objects#repositorycollaboratoredge
  Collaborator:
    displayName: Collaborator
    externalId: Collaborator
    description: Entity representing a GitHub user assigned to some Repository.
    syncFrequency: HOURLY
    syncMinInterval: 1
    apiCallFrequency: SECONDLY
    apiCallMinInterval: 1
    pageSize: 100
    pagesOrderedById: false
    attributes:
      - name: id
        externalId: $.node.id
        type: String
        indexed: true
        uniqueId: true
      # Note: This attribute has been added in post-processing and is not part of the User entity.
      - name: orgId
        externalId: orgId
        type: String
        indexed: true
      # Note: This attribute has been added in post-processing and is not part of the User entity.
      - name: repoId
        externalId: repoId
        type: String
        indexed: true
      # Note: Collaborator.permission represents the permission that this collaborator has in the repository with id 'repoId'
      - name: permission
        externalId: permission
        type: String
      - name: avatarUrl
        externalId: $.node.avatarUrl
        type: String
      - name: bio
        externalId: $.node.bio
        type: String
      - name: bioHTML
        externalId: $.node.bioHTML
        type: String
      - name: company
        externalId: $.node.company
        type: String
      - name: companyHTML
        externalId: $.node.companyHTML
        type: String
      - name: createdAt
        externalId: $.node.createdAt
        type: DateTime
      - name: databaseId
        externalId: $.node.databaseId
        type: Int64
      - name: email
        externalId: $.node.email
        type: String
      - name: login
        externalId: $.node.login
        type: String
      - name: isBountyHunter
        externalId: $.node.isBountyHunter
        type: Bool
      - name: isCampusExpert
        externalId: $.node.isCampusExpert
        type: Bool
      - name: isDeveloperProgramMember
        externalId: $.node.isDeveloperProgramMember
        type: Bool
      - name: isEmployee
        externalId: $.node.isEmployee
        type: Bool
      - name: isFollowingViewer
        externalId: $.node.isFollowingViewer
        type: Bool
      - name: isHireable
        externalId: $.node.isHireable
        type: Bool
      - name: isSiteAdmin
        externalId: $.node.isSiteAdmin
        type: Bool
      - name: isViewer
        externalId: $.node.isViewer
        type: Bool
      - name: location
        externalId: $.node.location
        type: String
      - name: name
        externalId: $.node.name
        type: String
      - name: pinnedItemsRemaining
        externalId: $.node.pinnedItemsRemaining
        type: Int64
      - name: projectsResourcePath
        externalId: $.node.projectsResourcePath
        type: String
      - name: projectsUrl
        externalId: $.node.projectsUrl
        type: String
      - name: resourcePath
        externalId: $.node.resourcePath
        type: String
      - name: twitterUsername
        externalId: $.node.twitterUsername
        type: String
      - name: updatedAt
        externalId: $.node.updatedAt
        type: DateTime
      - name: url
        externalId: $.node.url
        type: String
      - name: viewerCanChangePinnedItems
        externalId: $.node.viewerCanChangePinnedItems
        type: Bool
      - name: viewerCanCreateProjects
        externalId: $.node.viewerCanCreateProjects
        type: Bool
      - name: viewerCanFollow
        externalId: $.node.viewerCanFollow
        type: Bool
      - name: viewerIsFollowing
        externalId: $.node.viewerIsFollowing
        type: Bool
      - name: websiteUrl
        externalId: $.node.websiteUrl
        type: String
  CollaboratorOVDE:
    parent: Collaborator
    displayName: CollaboratorOVDE
    externalId: $.node.organizationVerifiedDomainEmails
    description: Entity representing a GitHub user's organization verified domain emails.
    syncFrequency: HOURLY
    syncMinInterval: 1
    apiCallFrequency: SECONDLY
    apiCallMinInterval: 1
    pageSize: 100
    pagesOrderedById: false
    attributes:
      - name: email
        externalId: email
        type: String
        indexed: true
        uniqueId: true
relationships:
  ParentOfTeamMember:
    childEntity: $.members.edges
  ParentOfTeamRepository:
    childEntity: $.repositories.edges
  ParentOfCollaboratorOVDE:
    childEntity: $.node.organizationVerifiedDomainEmails
  ParentOfUserOVDE:
    childEntity: $.node.organizationVerifiedDomainEmails
  UserToOrganization:
    name: MemberOf
    displayName: UserToOrganization
    fromAttribute: User.orgId
    toAttribute: Organization.id
  RepositoryToOrganization:
    displayName: RepositoryToOrganization
    name: MemberOf
    fromAttribute: Repository.orgId 
    toAttribute: Organization.id
  TeamToOrganization:
    displayName: TeamToOrganization
    name: MemberOf
    fromAttribute: Team.orgId
    toAttribute: Organization.id
  CollaboratorToOrganization:
    displayName: CollaboratorToOrganization
    name: MemberOf
    fromAttribute: Collaborator.orgId
    toAttribute: Organization.id
  CollaboratorToRepository:
    displayName: CollaboratorToRepository
    name: MemberOf
    fromAttribute: Collaborator.repoId
    toAttribute: Repository.id
  UserToCollaborator:
    displayName: UserToCollaborator
    name: SameAs
    fromAttribute: User.$.node.id
    toAttribute: Collaborator.$.node.id
  UserToTeamMember:
    name: SameAs
    fromAttribute: User.$.node.id
    toAttribute: $.members.edges.$.node.id
  RepositoryToTeamRepository:
    name: SameAs
    fromAttribute: Repository.$.node.id
    toAttribute: $.repositories.edges.$.node.id

